name: app-ci

on:
  pull_request:
    branches: [develop, main]
  push:
    branches: [develop, main]

jobs:
  build-app:
    runs-on: ubuntu-latest
    env:
      SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
      SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - name: use Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 14
      - name: cache Node_modules
        uses: actions/cache@v3
        id: caches
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: install npm
        if: steps.caches.outputs.cache-hit != 'true'
        run: npm ci
      - run: npm run format:check
      - run: npm run test -- --coverage
        env:
          CI: true
      - name: Upload test --coverage
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: coverage
      - name: Build Project
        if: github.event_name == 'push'
        run: npm run build
      - name: Upload build --coverage
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: build
      - name: ZIP Assets
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          zip -r build.zip ./build
          zip -r coverage.zip ./coverage
      - name: Create a release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx -p node@v18-lts -c "npx semantic-release"
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      - name: Deploy to develop Surge
        if: github.event_name == 'push' && github.refs == 'refs/heads/develop'
        run: npx surge --project ./build --domain mature-eyes.surge.sh
      - name: Deploy to product Surge
        if: github.event_name == 'push' && github.refs == 'refs/heads/main'
        run: npx surge --project ./build --domain measure-product.surge.sh
      - name: Upload coverage reports
        if: github.event_name == 'push' && github.refs == 'refs/heads/main'
        run: npx codecov
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
